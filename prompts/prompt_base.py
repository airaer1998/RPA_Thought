# API配置
API_KEY = "xxx"

# Prompt模板
CHAR_IDENTIFICATION_PROMPT = """
请分析以下文本中出现的重要角色(最多两名)：
{text}

请以JSON格式返回角色列表，格式如下：
{{"characters": ["角色1", "角色2", ...]}}
"""

# 第一类T-A数据的prompt（想法和行为在同一段落或距离很近）
TA_TYPE1_PROMPT = """
请从以下文本中抽取角色"{character}"的想法(Thought)和行为(Action)对，以及这两者关联的解析。
要求：
1. 只提取同一段落或相邻段落中出现的想法和行为对
2. Thought分为"推理式"和"感受式"两种
3. Action分为"行为"和"语言"两种
4. 只返回高质量的配对，如果没有合适的配对请返回空列表
5. Thought的过程需要比较长，至少包含两个句子
6. Thought是一个连贯的过程
7. Action是角色的一个具体行为
8. Thought和Action都必须是原文的内容
9. Thought和Action来自于同一个角色
10. Thought是角色心中的想法，没有表达出来，Action是角色表现出来的行为
11. Thought不能是角色说出来的话或是实际进行的行为

返回格式：
{{
    "ta_pairs": [
        {{
            "character": "角色名",
            "reason": "选择这个想法和行为对的原因"
            "thought": {{
                "content": "想法内容",
                "type": "想法类型（推理式或感受式）"
            }},
            "action": {{
                "content": "行为内容",
                "type": "行为类型（行为或语言）"
            }},
            "raw_text": "原文内容"
        }}
    ]
}}

这是一个例子：
输入文本：
"罗恩的嘴巴蠕动着，却发不出声音，就像一条出水的金鱼。这时赫敏猛地转身，气呼呆地登上女生宿舍楼梯，回去睡觉了。罗恩转过头来望着哈利。"你看看，"他结结巴巴地说，看样子完全被惊呆了，"你看看——这叫什么事儿——完全没有抓住问题的实质——"哈利没有吭声。他很珍惜现在他和罗恩又说话了，因此他谨慎地保持沉默，没有说出自己的观点——实际上，他认为跟罗恩比起来，赫敏才更准确地抓住了问题的实质。"

输出：
{{
    "ta_pairs": [
        {{
            "character": "哈利",
            "reason":"虽然哈利觉得赫敏是对的，她才更准确地抓住了问题的实质，但是他很很珍惜现在他和罗恩又说话了，所以他谨慎地保持沉默，没有说出自己的观点，也就没有吭声。"
            "thought": {{
                "content": "他很珍惜现在他和罗恩又说话了，因此他谨慎地保持沉默，没有说出自己的观点——实际上，他认为跟罗恩比起来，赫敏才更准确地抓住了问题的实质。",
                "type": "推理式"
            }},
            "action": {{
                "content": "哈利没有吭声",
                "type": "行为"
            }},
            "raw_text": "罗恩的嘴巴蠕动着，却发不出声音，就像一条出水的金鱼。这时赫敏猛地转身，气呼呆地登上女生宿舍楼梯，回去睡觉了。罗恩转过头来望着哈利。"你看看，"他结结巴巴地说，看样子完全被惊呆了，"你看看——这叫什么事儿——完全没有抓住问题的实质——"哈利没有吭声。他很珍惜现在他和罗恩又说话了，因此他谨慎地保持沉默，没有说出自己的观点——实际上，他认为跟罗恩比起来，赫敏才更准确地抓住了问题的实质。"
        }}
    ]
}}

现在请分析以下文本：
{text}
"""

# 第二类T-A数据的prompt（想法和行为在不同段落或距离较远）
TA_TYPE2_PROMPT = """
请从以下文本中抽取角色"{character}"的想法(Thought)和行为(Action)对。
要求：
1. 重点关注不同段落或距离较远的想法和行为对
2. Thought分为"推理式"和"感受式"两种
3. Action分为"行为"和"语言"两种
4. 只返回高质量的配对，如果没有合适的配对请返回空列表
5. 确保提取的想法和行为之间存在明确的因果关系

返回格式：
{{
    "ta_pairs": [
        {{
            "character": "角色名",
            "thought": {{
                "content": "想法内容",
                "type": "想法类型"
            }},
            "action": {{
                "content": "行为内容",
                "type": "行为类型"
            }},
            "raw_text": "原文内容"
        }}
    ]
}}

请分析以下文本：
{text}
"""

# 第三类T-A数据的prompt（一个行为对应多个想法）
TA_TYPE3_PROMPT = """
请从以下文本中抽取角色"{character}"的想法(Thought)和行为(Action)对。
要求：
1. 重点寻找一个行为背后对应的多个想法
2. 这些想法可能分布在不同的段落中
3. Thought分为"推理式"和"感受式"两种
4. Action分为"行为"和"语言"两种
5. 只返回高质量的配对，如果没有合适的配对请返回空列表
6. 确保所有想法都与该行为有明确的因果关联

返回格式：
{{
    "ta_pairs": [
        {{
            "character": "角色名",
            "thoughts": [
                {{
                    "content": "想法1内容",
                    "type": "想法1类型"
                }},
                {{
                    "content": "想法2内容",
                    "type": "想法2类型"
                }}
            ],
            "action": {{
                "content": "行为内容",
                "type": "行为类型"
            }},
            "raw_text": "原文内容"
        }}
    ]
}}

请分析以下文本：
{text}
""" 